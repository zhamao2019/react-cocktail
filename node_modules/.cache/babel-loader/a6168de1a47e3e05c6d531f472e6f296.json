{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nconst chalk = require('chalk');\n\nconst friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n} // Cleans up webpack error messages.\n// eslint-disable-next-line no-unused-vars\n\n\nfunction formatMessage(message, isError) {\n  let lines = message.split('\\n'); // Strip Webpack-added headers off errors/warnings\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\n\n  lines = lines.filter(line => !/Module [A-z ]+\\(from/.test(line)); // Transform parsing error into syntax error\n  // TODO: move this to our ESLint formatter?\n\n  lines = lines.map(line => {\n    const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line);\n\n    if (!parsingError) {\n      return line;\n    }\n\n    const [, errorLine, errorColumn, errorMessage] = parsingError;\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`;\n  });\n  message = lines.join('\\n'); // Smoosh syntax errors (commonly found in CSS)\n\n  message = message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g, `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`); // Remove columns from ESLint formatter output (we added these for more\n  // accurate syntax errors)\n\n  message = message.replace(/Line (\\d+):\\d+:/g, 'Line $1:'); // Clean up export errors\n\n  message = message.replace(/^.*export '(.+?)' was not found in '(.+?)'.*$/gm, `Attempted import error: '$1' is not exported from '$2'.`);\n  message = message.replace(/^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, `Attempted import error: '$2' does not contain a default export (imported as '$1').`);\n  message = message.replace(/^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`);\n  lines = message.split('\\n'); // Remove leading newline\n\n  if (lines.length > 2 && lines[1].trim() === '') {\n    lines.splice(1, 1);\n  } // Clean up file name\n\n\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1'); // Cleans up verbose \"module not found\" messages for files and packages.\n\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\n    lines = [lines[0], lines[1].replace('Error: ', '').replace('Module not found: Cannot find file:', 'Cannot find file:')];\n  } // Add helpful message for users trying to use Sass for the first time\n\n\n  if (lines[1] && lines[1].match(/Cannot find module.+node-sass/)) {\n    lines[1] = 'To import Sass files, you first need to install node-sass.\\n';\n    lines[1] += 'Run `npm install node-sass` or `yarn add node-sass` inside your workspace.';\n  }\n\n  lines[0] = chalk.inverse(lines[0]);\n  message = lines.join('\\n'); // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by Webpack. For more information see\n  // https://github.com/facebook/create-react-app/pull/1050\n\n  message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, ''); // at ... ...:x:y\n\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, ''); // at <anonymous>\n\n  lines = message.split('\\n'); // Remove duplicated newlines\n\n  lines = lines.filter((line, index, arr) => index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()); // Reassemble the message\n\n  message = lines.join('\\n');\n  return message.trim();\n}\n\nfunction formatWebpackMessages(json) {\n  const formattedErrors = json.errors.map(function (message) {\n    return formatMessage(message, true);\n  });\n  const formattedWarnings = json.warnings.map(function (message) {\n    return formatMessage(message, false);\n  });\n  const result = {\n    errors: formattedErrors,\n    warnings: formattedWarnings\n  };\n\n  if (result.errors.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n\n  return result;\n}\n\nmodule.exports = formatWebpackMessages;","map":{"version":3,"sources":["/Users/yangbing/Documents/code/React/react-cocktail/setup/node_modules/react-dev-utils/formatWebpackMessages.js"],"names":["chalk","require","friendlySyntaxErrorLabel","isLikelyASyntaxError","message","indexOf","formatMessage","isError","lines","split","filter","line","test","map","parsingError","exec","errorLine","errorColumn","errorMessage","join","replace","length","trim","splice","match","inverse","index","arr","formatWebpackMessages","json","formattedErrors","errors","formattedWarnings","warnings","result","some","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst chalk = require('chalk');\nconst friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n}\n\n// Cleans up webpack error messages.\n// eslint-disable-next-line no-unused-vars\nfunction formatMessage(message, isError) {\n  let lines = message.split('\\n');\n\n  // Strip Webpack-added headers off errors/warnings\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\n  lines = lines.filter(line => !/Module [A-z ]+\\(from/.test(line));\n\n  // Transform parsing error into syntax error\n  // TODO: move this to our ESLint formatter?\n  lines = lines.map(line => {\n    const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(\n      line\n    );\n    if (!parsingError) {\n      return line;\n    }\n    const [, errorLine, errorColumn, errorMessage] = parsingError;\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`;\n  });\n\n  message = lines.join('\\n');\n  // Smoosh syntax errors (commonly found in CSS)\n  message = message.replace(\n    /SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g,\n    `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`\n  );\n  // Remove columns from ESLint formatter output (we added these for more\n  // accurate syntax errors)\n  message = message.replace(/Line (\\d+):\\d+:/g, 'Line $1:');\n  // Clean up export errors\n  message = message.replace(\n    /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$1' is not exported from '$2'.`\n  );\n  message = message.replace(\n    /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$2' does not contain a default export (imported as '$1').`\n  );\n  message = message.replace(\n    /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\n  );\n  lines = message.split('\\n');\n\n  // Remove leading newline\n  if (lines.length > 2 && lines[1].trim() === '') {\n    lines.splice(1, 1);\n  }\n  // Clean up file name\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1');\n\n  // Cleans up verbose \"module not found\" messages for files and packages.\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\n    lines = [\n      lines[0],\n      lines[1]\n        .replace('Error: ', '')\n        .replace('Module not found: Cannot find file:', 'Cannot find file:'),\n    ];\n  }\n\n  // Add helpful message for users trying to use Sass for the first time\n  if (lines[1] && lines[1].match(/Cannot find module.+node-sass/)) {\n    lines[1] = 'To import Sass files, you first need to install node-sass.\\n';\n    lines[1] +=\n      'Run `npm install node-sass` or `yarn add node-sass` inside your workspace.';\n  }\n\n  lines[0] = chalk.inverse(lines[0]);\n\n  message = lines.join('\\n');\n  // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by Webpack. For more information see\n  // https://github.com/facebook/create-react-app/pull/1050\n  message = message.replace(\n    /^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm,\n    ''\n  ); // at ... ...:x:y\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, ''); // at <anonymous>\n  lines = message.split('\\n');\n\n  // Remove duplicated newlines\n  lines = lines.filter(\n    (line, index, arr) =>\n      index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()\n  );\n\n  // Reassemble the message\n  message = lines.join('\\n');\n  return message.trim();\n}\n\nfunction formatWebpackMessages(json) {\n  const formattedErrors = json.errors.map(function(message) {\n    return formatMessage(message, true);\n  });\n  const formattedWarnings = json.warnings.map(function(message) {\n    return formatMessage(message, false);\n  });\n  const result = { errors: formattedErrors, warnings: formattedWarnings };\n  if (result.errors.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n  return result;\n}\n\nmodule.exports = formatWebpackMessages;\n"]},"metadata":{},"sourceType":"script"}