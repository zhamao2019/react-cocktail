{"ast":null,"code":"var _jsxFileName = \"/Users/yangbing/Documents/code/React/react-cocktail/setup/src/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n  const fetchDrinks = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const {\n        drinks\n      } = data;\n\n      if (drinks) {\n        const newCocktails = drinks.map(item => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm, fetchDrinks]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      cocktails,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}; // make sure use\n\n\n_s(AppProvider, \"VxV1NiE0c5LiieGfETCUhYqhfps=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","response","fetch","data","json","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","id","name","image","info","glass","error","console","log","useGlobalContext"],"sources":["/Users/yangbing/Documents/code/React/react-cocktail/setup/src/context.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useCallback } from 'react'\n\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n\n  const fetchDrinks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const {drinks} = data;\n      if (drinks) {\n        const newCocktails = drinks.map((item) => {\n          const { \n            idDrink, \n            strDrink, \n            strDrinkThumb, \n            strAlcoholic, \n            strGlass\n          } = item;\n          return { \n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          }\n        })\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm])\n\n  useEffect(() => {\n    fetchDrinks()\n  }, [searchTerm, fetchDrinks])\n\n  return <AppContext.Provider \n    value={{\n      loading, \n      cocktails, \n      setSearchTerm,\n      }}\n      >\n      {children}\n      </AppContext.Provider>\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,GAAG,GAAG,2DAAZ;AACA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,GAAD,CAA5C;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;EAEA,MAAMe,WAAW,GAAGZ,WAAW,CAAC,YAAY;IAC1CO,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAI,GAAEO,UAAW,EAArB,CAA5B;MACA,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACA,MAAM;QAACC;MAAD,IAAWF,IAAjB;;MACA,IAAIE,MAAJ,EAAY;QACV,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;UACxC,MAAM;YACJC,OADI;YAEJC,QAFI;YAGJC,aAHI;YAIJC,YAJI;YAKJC;UALI,IAMFL,IANJ;UAOA,OAAO;YACLM,EAAE,EAAEL,OADC;YAELM,IAAI,EAAEL,QAFD;YAGLM,KAAK,EAAEL,aAHF;YAILM,IAAI,EAAEL,YAJD;YAKLM,KAAK,EAAEL;UALF,CAAP;QAOD,CAfoB,CAArB;QAgBAd,YAAY,CAACO,YAAD,CAAZ;MACD,CAlBD,MAkBO;QACLP,YAAY,CAAC,EAAD,CAAZ;MACD;;MACDJ,UAAU,CAAC,KAAD,CAAV;IACD,CA1BD,CA0BE,OAAOwB,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAxB,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CAhC8B,EAgC5B,CAACC,UAAD,CAhC4B,CAA/B;EAkCAT,SAAS,CAAC,MAAM;IACda,WAAW;EACZ,CAFQ,EAEN,CAACJ,UAAD,EAAaI,WAAb,CAFM,CAAT;EAIA,oBAAO,QAAC,UAAD,CAAY,QAAZ;IACL,KAAK,EAAE;MACLN,OADK;MAELI,SAFK;MAGLD;IAHK,CADF;IAAA,UAOFJ;EAPE;IAAA;IAAA;IAAA;EAAA,QAAP;AASD,CApDD,C,CAqDA;;;GArDMD,W;;KAAAA,W;AAsDN,OAAO,MAAM8B,gBAAgB,GAAG,MAAM;EAAA;;EACpC,OAAOpC,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;;IAAMgC,gB;;AAIb,SAAShC,UAAT,EAAqBE,WAArB"},"metadata":{},"sourceType":"module"}